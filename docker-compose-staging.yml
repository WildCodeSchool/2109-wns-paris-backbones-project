version: "3.8"

services:
  postgresDB:
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./staging_pg_data:/var/lib/postgres/data
      - ./staging_sql/create_database.sql:/docker-entrypoint-initdb.d/create_database.sql
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s

  back:
    image: ticketappwns/ticketapp_back
    env_file:
      - /home/wns_student/ticketapp-staging/.env.prod
    ports:
      - "4001:4000"
    depends_on:
      postgresDB:
        condition: service_healthy
    command: sh -c "yarn seed:prod && yarn start"

  front:
    image: ticketappwns/ticketapp_front
    volumes:
      - web-front-build:/front/dist
    command: sh -c "yarn build"
    depends_on:
      - back
  nginx:
    image: nginx:1.21.3
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - web-front-build:/web-front-build
      - ./logs:/var/log/nginx
    ports:
      - ${GATEWAY_PORT:-3001}:80
    depends_on:
      - front
      - back
    restart: always

volumes:
  web-front-build:


